<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog</title>
    <link>https://zerolei.com/blog/</link>
    <atom:link href="/blog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>慢慢被锤骟,偶尔哼哧几句</description>
    <pubDate>Tue, 03 Mar 2020 15:43:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>二月随想</title>
      <link>https://zerolei.com/blog/2020/03/03/%E4%BA%8C%E6%9C%88%E9%9A%8F%E6%83%B3/</link>
      <guid>https://zerolei.com/blog/2020/03/03/%E4%BA%8C%E6%9C%88%E9%9A%8F%E6%83%B3/</guid>
      <pubDate>Tue, 03 Mar 2020 15:07:28 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;2月已过,疫情还在继续,越发显得个人像颗芦苇;&lt;br&gt;疫情中,有些人事需要纪念:李文亮被央视新闻联播报道是传谣,结果被打脸,好在李医生有保险。&lt;/p&gt;
&lt;p&gt;&amp;#160;&amp;#160;&amp;#16
        
      
      </description>
      
      <content:encoded><![CDATA[<p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;2月已过,疫情还在继续,越发显得个人像颗芦苇;<br>疫情中,有些人事需要纪念:李文亮被央视新闻联播报道是传谣,结果被打脸,好在李医生有保险。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;个人在2019五一劳动节时坐火车遭遇泥石流,当时没想到返程,却在衢州火车站待了一夜;<br>PS:习惯了火车最多晚点,不会缺席,目的已不可达,没想到及时返程;</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Thing that seem obvious are not obvious.<br>显然的事并不容易被人发现,人们都拘于固有思维,例如给箱子装上轮子是1972年才有的事。</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;最后转一首朋友的骚诗:<center>秀似山时雾隐隐，</center>    <center>眸星沉霜点点萤。</center>   <center>卿笑再忧红尘浅，</center>  <center>染尽烟火在人间。</center><br><img src="/blog/2020/03/03/二月随想/afterwards.jpg" alt="后来"><br>少年已成人，忘却了远方的诗和海，梦中偶然惊醒的风，只是当年的田野不在。</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2020/03/03/%E4%BA%8C%E6%9C%88%E9%9A%8F%E6%83%B3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>elasticsearch维护中常遇到的问题</title>
      <link>https://zerolei.com/blog/2020/01/14/elasticsearch%E7%BB%B4%E6%8A%A4%E4%B8%AD%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <guid>https://zerolei.com/blog/2020/01/14/elasticsearch%E7%BB%B4%E6%8A%A4%E4%B8%AD%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Tue, 14 Jan 2020 15:07:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Elasticsearch常应用于企业大数据、大规模日志存储分析;&lt;br&gt;在我的应用场景中,Elasticsearch存储几百台防火墙,负载均衡设备的syslog,数据量每个月都在提升,年前已突破每月3百G,日常肯定是要维护的,下面从4个方面展开:&lt;/p&gt;
&lt;h2 id=&quot;一、健康度检查&quot;&gt;&lt;a href=&quot;#一、健康度检查&quot; class=&quot;headerlink&quot; title=&quot;一、健康度检查&quot;&gt;&lt;/a&gt;一、健康度检查&lt;/h2&gt;&lt;p&gt;可以在kibana的Dev Tool执行如下命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;GET _cat/health?v&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;获取当前elasticsearch的健康状态&lt;br&gt;&lt;img src=&quot;/blog/2020/01/14/elasticsearch维护中常遇到的问题/health.png&quot; alt=&quot;health&quot;&gt;&lt;br&gt;status:集群状态,分green,yellow和red.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Elasticsearch常应用于企业大数据、大规模日志存储分析;<br>在我的应用场景中,Elasticsearch存储几百台防火墙,负载均衡设备的syslog,数据量每个月都在提升,年前已突破每月3百G,日常肯定是要维护的,下面从4个方面展开:</p><h2 id="一、健康度检查"><a href="#一、健康度检查" class="headerlink" title="一、健康度检查"></a>一、健康度检查</h2><p>可以在kibana的Dev Tool执行如下命令:</p><blockquote><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;GET _cat/health?v</p></blockquote><p>获取当前elasticsearch的健康状态<br><img src="/blog/2020/01/14/elasticsearch维护中常遇到的问题/health.png" alt="health"><br>status:集群状态,分green,yellow和red.</p><a id="more"></a><h2 id="二、对应的JVM-参数"><a href="#二、对应的JVM-参数" class="headerlink" title="二、对应的JVM 参数"></a>二、对应的JVM 参数</h2><p>&#8195;&#8195;因为elasticsearch是使用Java编写的,其运行在 JVM 上，因此 JVM 参数设置对于 elasticsearch 集群的重要性不言而喻。。</p><h3 id="1-堆的容量的设置"><a href="#1-堆的容量的设置" class="headerlink" title="1.堆的容量的设置"></a>1.堆的容量的设置</h3><p>&#8195;&#8195;对应的jvm.options中的堆默认只有1G,对于业务环境过小,这里按服务器的内存一半以下分配给elasticsearch(最好低于32G以便利用java的内存指针压缩技术).</p><h3 id="2-增大每个进程最大可使用的文件描述符数量"><a href="#2-增大每个进程最大可使用的文件描述符数量" class="headerlink" title="2.增大每个进程最大可使用的文件描述符数量"></a>2.增大每个进程最大可使用的文件描述符数量</h3><p>&#8195;&#8195;可以使用<code>ulimit -a</code>查看,在centos中默认只有1024,这里已改为65535<br><img src="/blog/2020/01/14/elasticsearch维护中常遇到的问题/ulimit-a.jpg" alt="ulimit-a"><br><img src="/blog/2020/01/14/elasticsearch维护中常遇到的问题/limits.conf.jpg" alt="limits.conf"></p><h2 id="三、数据的导出"><a href="#三、数据的导出" class="headerlink" title="三、数据的导出"></a>三、数据的导出</h2><p>&#8195;&#8195;业务环境配套的kibana没有report功能,还好有对应的python包,可以实现,demo如下:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line"></span><br><span class="line">es = Elasticsearch(<span class="string">"http://127.0.0.1/"</span>)</span><br><span class="line">body = &#123;<span class="string">"query"</span>:&#123;<span class="string">"term"</span>:&#123;<span class="string">"host"</span>:<span class="string">"centos7.3"</span>&#125;&#125;&#125;</span><br><span class="line">f = open(<span class="string">"/tmp/es.txt"</span>,<span class="string">"a+"</span>)</span><br><span class="line">query = es.search(index = <span class="string">"messages-2020.01.14"</span>,body = body, scroll = <span class="string">"5m"</span>, size = <span class="number">100</span>)  <span class="comment">#size是查询到的数据上限条数</span></span><br><span class="line">result = query[<span class="string">'hits'</span>][<span class="string">'hits'</span>]</span><br><span class="line">print(query[<span class="string">'hits'</span>][<span class="string">'total'</span>])   <span class="comment">#匹配到的总数</span></span><br><span class="line"><span class="keyword">print</span> (len(result))              <span class="comment">#为size的值</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> result:</span><br><span class="line">    <span class="comment">#print (j["_source"])</span></span><br><span class="line">    f.write(str(j[<span class="string">"_source"</span>]) + <span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p><h2 id="四、磁盘容量的维护-索引的删除"><a href="#四、磁盘容量的维护-索引的删除" class="headerlink" title="四、磁盘容量的维护(索引的删除)"></a>四、磁盘容量的维护(索引的删除)</h2><p>&#8195;&#8195;可以在kibana的Dev Tool执行如下命令,查看每个索引的大小,以此判断删除索引释放空间或者加磁盘:</p><blockquote><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;GET _cat/indices?v</p></blockquote><p><img src="/blog/2020/01/14/elasticsearch维护中常遇到的问题/cat-indices.jpg" alt="cat-indices"></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2020/01/14/elasticsearch%E7%BB%B4%E6%8A%A4%E4%B8%AD%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux操作系统的工作流程</title>
      <link>https://zerolei.com/blog/2019/09/08/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
      <guid>https://zerolei.com/blog/2019/09/08/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
      <pubDate>Sun, 08 Sep 2019 15:30:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/blog/2019/09/08/Linux操作系统的工作流程/Linux操作系统的工作流程.jpg&quot; alt=&quot;LinuxPandect&quot;&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/blog/2019/09/08/Linux操作系统的工作流程/Linux操作系统的工作流程.jpg" alt="LinuxPandect"><br><a id="more"></a><br>&#8195;&#8195;放个线头。</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2019/09/08/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>找回密码的功能设计规则</title>
      <link>https://zerolei.com/blog/2019/02/26/%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E7%9A%84%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1%E8%A7%84%E5%88%99/</link>
      <guid>https://zerolei.com/blog/2019/02/26/%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E7%9A%84%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1%E8%A7%84%E5%88%99/</guid>
      <pubDate>Tue, 26 Feb 2019 04:25:09 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;一、如何保存密码&quot;&gt;&lt;a href=&quot;#一、如何保存密码&quot; class=&quot;headerlink&quot; title=&quot;一、如何保存密码&quot;&gt;&lt;/a&gt;一、如何保存密码&lt;/h2&gt;&lt;h4 id=&quot;第一条规则：密码永远都要哈希保存。&quot;&gt;&lt;a href=&quot;#第一条规则：密码永远都要哈希保存。&quot; class=&quot;headerlink&quot; title=&quot;第一条规则：密码永远都要哈希保存。&quot;&gt;&lt;/a&gt;第一条规则：密码永远都要哈希保存。&lt;/h4&gt;&lt;p&gt;&amp;#8195;&amp;#8195;”哈希保存”就是对密码使用哈希算法，将哈希值保存进数据库。为了增加随机性，防止彩虹表这一类的工具，计算哈希的时候，每个用户都有一个不一样的盐值（salt），也会同时保存进数据库。&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="一、如何保存密码"><a href="#一、如何保存密码" class="headerlink" title="一、如何保存密码"></a>一、如何保存密码</h2><h4 id="第一条规则：密码永远都要哈希保存。"><a href="#第一条规则：密码永远都要哈希保存。" class="headerlink" title="第一条规则：密码永远都要哈希保存。"></a>第一条规则：密码永远都要哈希保存。</h4><p>&#8195;&#8195;”哈希保存”就是对密码使用哈希算法，将哈希值保存进数据库。为了增加随机性，防止彩虹表这一类的工具，计算哈希的时候，每个用户都有一个不一样的盐值（salt），也会同时保存进数据库。<br><a id="more"></a><br>&#8195;&#8195;哈希是单向运算，无法还原，所以即使哈希值泄漏，一般来说，也不会暴露用户的原始密码。</p><h2 id="二、密码重置"><a href="#二、密码重置" class="headerlink" title="二、密码重置"></a>二、密码重置</h2><p>&#8195;&#8195;如果密码是哈希保存，用户一旦忘记密码，网站也无法知道原始密码是什么，只能让用户重置密码。</p><h4 id="第二条规则：找回密码就是让用户重置密码。"><a href="#第二条规则：找回密码就是让用户重置密码。" class="headerlink" title="第二条规则：找回密码就是让用户重置密码。"></a>第二条规则：找回密码就是让用户重置密码。</h4><p>&#8195;&#8195;重置密码又有两种做法。有的网站先自动改成一个随机密码，然后再让用户登录后自己改掉。这样做的风险在于，你必须把随机密码告知用户，通过邮件或短信，这个过程中就有可能泄漏。</p><h4 id="第三条规则：重置密码的时候，要给出一个链接，让用户到网页上自己修改密码。"><a href="#第三条规则：重置密码的时候，要给出一个链接，让用户到网页上自己修改密码。" class="headerlink" title="第三条规则：重置密码的时候，要给出一个链接，让用户到网页上自己修改密码。"></a>第三条规则：重置密码的时候，要给出一个链接，让用户到网页上自己修改密码。</h4><p>&#8195;&#8195;重置链接由于是明文传播，而且直接修改密码，所以必须有失效时间。一般来说，可以设成10分钟失效。</p><h2 id="三、用户名还是邮件地址？"><a href="#三、用户名还是邮件地址？" class="headerlink" title="三、用户名还是邮件地址？"></a>三、用户名还是邮件地址？</h2><h4 id="第四条规则：重置密码之前，如果用户提供了错误的邮件地址，不要提示他。"><a href="#第四条规则：重置密码之前，如果用户提供了错误的邮件地址，不要提示他。" class="headerlink" title="第四条规则：重置密码之前，如果用户提供了错误的邮件地址，不要提示他。"></a>第四条规则：重置密码之前，如果用户提供了错误的邮件地址，不要提示他。</h4><p>&#8195;&#8195;这是因为如果提示了，数据库不包含某个邮件地址，就可能泄露用户的隐私，被钓鱼者利用。</p><h4 id="第五条规则：重置密码的时候，识别用户最好依靠邮件地址，而不是用户名。"><a href="#第五条规则：重置密码的时候，识别用户最好依靠邮件地址，而不是用户名。" class="headerlink" title="第五条规则：重置密码的时候，识别用户最好依靠邮件地址，而不是用户名。"></a>第五条规则：重置密码的时候，识别用户最好依靠邮件地址，而不是用户名。</h4><h2 id="四、过滤用户"><a href="#四、过滤用户" class="headerlink" title="四、过滤用户"></a>四、过滤用户</h2><p>&#8195;&#8195;为了防止机器人攻击，进入重置密码之前，最好加上 CAPTCHA 识别。</p><p>&#8195;&#8195;此外，还要防止一种情况：张三知道李四的邮箱，然后使用找回密码功能，让系统给李四发出重置密码的邮件。</p><h4 id="第六条规则：如果条件允许，重置密码之前，最好请用户回答一些个人问题，或者采用-2FA-验证，比如短信验证码。"><a href="#第六条规则：如果条件允许，重置密码之前，最好请用户回答一些个人问题，或者采用-2FA-验证，比如短信验证码。" class="headerlink" title="第六条规则：如果条件允许，重置密码之前，最好请用户回答一些个人问题，或者采用 2FA 验证，比如短信验证码。"></a>第六条规则：如果条件允许，重置密码之前，最好请用户回答一些个人问题，或者采用 2FA 验证，比如短信验证码。</h4><p>&#8195;&#8195;最后，不要忘了记录 IP 地址，在邮件里面告诉用户，哪个 IP 地址在申请重置你的密码。</p><p><a href="http://www.ruanyifeng.com/blog/2019/02/password.html" target="_blank" rel="noopener">原文</a></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2019/02/26/%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E7%9A%84%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1%E8%A7%84%E5%88%99/#disqus_thread</comments>
    </item>
    
    <item>
      <title>抓包分析HTTP通信细节</title>
      <link>https://zerolei.com/blog/2019/02/25/%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90HTTP%E9%80%9A%E4%BF%A1%E7%BB%86%E8%8A%82/</link>
      <guid>https://zerolei.com/blog/2019/02/25/%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90HTTP%E9%80%9A%E4%BF%A1%E7%BB%86%E8%8A%82/</guid>
      <pubDate>Sun, 24 Feb 2019 16:04:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/blog/2019/02/25/抓包分析HTTP通信细节/抓取报文后隔指定的时间保存一次.png&quot; alt=&quot;tcpdump&quot;&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/blog/2019/02/25/抓包分析HTTP通信细节/抓取报文后隔指定的时间保存一次.png" alt="tcpdump"><br><a id="more"></a><br>&#8195;&#8195;1. 抓取报文后隔指定的时间保存一次：<br>tcpdump -i eth3 -s0 -G 60 -Z root -w %Y_%m%d_%H%M_%S.pcap<br>这里解释下-G选项 后面接时间 单位为秒 本例中的时间为60秒</p><p>&#8195;&#8195;2. 抓取报文后达到指定的大小保存一次；<br>tcpdump -i eth3 -s0 -C 1 -Z root -w jiangsuyinhang.pcap。</p><p>&#8195;&#8195;用wireshark和tcpdump来分析TCP的“三次握手，四次挥手”，非常好用。<br>待续</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2019/02/25/%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90HTTP%E9%80%9A%E4%BF%A1%E7%BB%86%E8%8A%82/#disqus_thread</comments>
    </item>
    
    <item>
      <title>备份的基本原则及相关命令</title>
      <link>https://zerolei.com/blog/2018/07/04/%E5%A4%87%E4%BB%BD%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link>
      <guid>https://zerolei.com/blog/2018/07/04/%E5%A4%87%E4%BB%BD%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid>
      <pubDate>Wed, 04 Jul 2018 06:54:50 GMT</pubDate>
      <description>
      
        &lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;备份的最佳做法是采取3-2-1规则，即至少做三个副本，用两种不同格式保存，并将副本放在异地存储。&lt;/p&gt;
&lt;h3 id=&quot;Linux下一般使用rsync&quot;&gt;&lt;a href=&quot;#Linux下一般使用rsync&quot; class=&quot;headerlink&quot; title=&quot;Linux下一般使用rsync&quot;&gt;&lt;/a&gt;Linux下一般使用&lt;a href=&quot;http://man.linuxde.net/rsync&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;rsync&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;rsync是linux系统下的数据镜像备份工具。使用快速增量备份工具Remote Sync可以远程同步，支持本地复制，或者与其他SSH、rsync主机同步。&lt;/p&gt;
&lt;h3 id=&quot;Windows下则推荐使用FreeFileSync&quot;&gt;&lt;a href=&quot;#Windows下则推荐使用FreeFileSync&quot; class=&quot;headerlink&quot; title=&quot;Windows下则推荐使用FreeFileSync&quot;&gt;&lt;/a&gt;Windows下则推荐使用&lt;a href=&quot;https://freefilesync.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FreeFileSync&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;具体的使用方法要参考：&lt;br&gt;&lt;a href=&quot;http://fs1.wups.ntpc.edu.tw/documents/pdf/%E5%9C%A8Windows7%E4%BD%BF%E7%94%A8FreeFileSync%E5%90%8C%E6%AD%A5%E8%B3%87%E6%96%99.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在 Windows 7  使用 FreeFileSync 同步資料&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;备份的最佳做法是采取3-2-1规则，即至少做三个副本，用两种不同格式保存，并将副本放在异地存储。</p><h3 id="Linux下一般使用rsync"><a href="#Linux下一般使用rsync" class="headerlink" title="Linux下一般使用rsync"></a>Linux下一般使用<a href="http://man.linuxde.net/rsync" target="_blank" rel="noopener">rsync</a></h3><p>rsync是linux系统下的数据镜像备份工具。使用快速增量备份工具Remote Sync可以远程同步，支持本地复制，或者与其他SSH、rsync主机同步。</p><h3 id="Windows下则推荐使用FreeFileSync"><a href="#Windows下则推荐使用FreeFileSync" class="headerlink" title="Windows下则推荐使用FreeFileSync"></a>Windows下则推荐使用<a href="https://freefilesync.org/" target="_blank" rel="noopener">FreeFileSync</a></h3><p>具体的使用方法要参考：<br><a href="http://fs1.wups.ntpc.edu.tw/documents/pdf/%E5%9C%A8Windows7%E4%BD%BF%E7%94%A8FreeFileSync%E5%90%8C%E6%AD%A5%E8%B3%87%E6%96%99.pdf" target="_blank" rel="noopener">在 Windows 7  使用 FreeFileSync 同步資料</a></p><a id="more"></a><h3 id="我的实例"><a href="#我的实例" class="headerlink" title="我的实例:"></a>我的实例:</h3><p><img src="/blog/2018/07/04/备份的基本原则及相关命令/My_FreeFileSync.png" alt="My_FreeFileSync"></p><p>比较设置可以采用默认;<br>而同步设置:推荐镜像+历史版本的方式<br><img src="/blog/2018/07/04/备份的基本原则及相关命令/sync_set.png" alt="sync_set.png"></p><p>其他功能:过滤器,生成脚本,待发掘</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/07/04/%E5%A4%87%E4%BB%BD%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>win10更新到1803升级实践</title>
      <link>https://zerolei.com/blog/2018/07/01/win10%E6%9B%B4%E6%96%B0%E5%88%B01803%E5%8D%87%E7%BA%A7%E5%AE%9E%E8%B7%B5/</link>
      <guid>https://zerolei.com/blog/2018/07/01/win10%E6%9B%B4%E6%96%B0%E5%88%B01803%E5%8D%87%E7%BA%A7%E5%AE%9E%E8%B7%B5/</guid>
      <pubDate>Sun, 01 Jul 2018 08:53:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;最近win10系统又被强迫更新到了1803,不出意外的出现了小问题,在此记录一下解决过程&lt;/p&gt;
&lt;h3 id=&quot;发现C盘容量占用蹭蹭上涨&quot;&gt;&lt;a href=&quot;#发现C盘容量占用蹭蹭上涨&quot; class=&quot;headerlink&quot; title=&quot;发现C盘容量占用蹭蹭上涨&quot;&gt;&lt;/a&gt;发现C盘容量占用蹭蹭上涨&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/blog/2018/07/01/win10更新到1803升级实践/win10_history.png&quot; alt=&quot;win10_history&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;最近win10系统又被强迫更新到了1803,不出意外的出现了小问题,在此记录一下解决过程</p><h3 id="发现C盘容量占用蹭蹭上涨"><a href="#发现C盘容量占用蹭蹭上涨" class="headerlink" title="发现C盘容量占用蹭蹭上涨"></a>发现C盘容量占用蹭蹭上涨</h3><p><img src="/blog/2018/07/01/win10更新到1803升级实践/win10_history.png" alt="win10_history"></p><a id="more"></a><p>可以使用自带的磁盘清理工具安全删除掉</p><h3 id="virtualbox的主机网络配置文件丢失"><a href="#virtualbox的主机网络配置文件丢失" class="headerlink" title="virtualbox的主机网络配置文件丢失;"></a>virtualbox的主机网络配置文件丢失;</h3><p>virtualbox 打开虚拟机报错host-only ethernet error<br><img src="/blog/2018/07/01/win10更新到1803升级实践/host-only_ethernet_error.png" alt="host-only_ethernet_error"><br>查看ip:发现之前设置的虚拟host ip失效了<br><img src="/blog/2018/07/01/win10更新到1803升级实践/win10-ip.png" alt="win10-ip"><br>于是重新设置:<br><img src="/blog/2018/07/01/win10更新到1803升级实践/reset_host-only_ip.png" alt="reset_host-only_ip"><br>打开还是报错,猜测是虚拟网卡的mac有变动,点击刷新:<br><img src="/blog/2018/07/01/win10更新到1803升级实践/reset_virtualbox_mac.png" alt="reset_virtualbox_mac"><br>成功启动后<br><code>cd /etc/sysconfig/network-scripts/</code>把刚更新的HWADDR配置到对应的网卡配置文件中<br><img src="/blog/2018/07/01/win10更新到1803升级实践/update_hwaddr.png" alt="update_hwaddr"><br>安装1803质量更新后重启电脑,打完收工.</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;Note:VirtualBox、Vmware、Hyper-v 之间有冲突;<br>VT-x/AMD-V“是处理器的硬件虚拟化支持，已经在BIOS中打开了； Hyper-V使用了它，于是VirtualBox、VMware就报无法使用（”not operational“）了</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/07/01/win10%E6%9B%B4%E6%96%B0%E5%88%B01803%E5%8D%87%E7%BA%A7%E5%AE%9E%E8%B7%B5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>git page的证书过期后无法自动续签</title>
      <link>https://zerolei.com/blog/2018/06/16/git%20page%E7%9A%84%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E5%90%8E%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E7%BB%AD%E7%AD%BE/</link>
      <guid>https://zerolei.com/blog/2018/06/16/git%20page%E7%9A%84%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E5%90%8E%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E7%BB%AD%E7%AD%BE/</guid>
      <pubDate>Fri, 15 Jun 2018 22:00:20 GMT</pubDate>
      <description>
      
        &lt;p&gt;发现证书过期:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2018/06/16/git page的证书过期后无法自动续签/certificate_expired.png&quot; alt=&quot;certificate_expired&quot;&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>发现证书过期:</p><p><img src="/blog/2018/06/16/git page的证书过期后无法自动续签/certificate_expired.png" alt="certificate_expired"><br><a id="more"></a><br>在V2EX查到:</p><blockquote><p>之前你的域名解析 a 记录 ip 太老 需要换成 github 新的 ip 才行 然后清域名重置下 在重新绑定;</p></blockquote><p>但我在DNSPOD中没有设置A记录,只设置了CNAME记录,所以这就令人头秃了.</p><p>然而过了一天,又可以了….</p><p><img src="/blog/2018/06/16/git page的证书过期后无法自动续签/certificate_ok.png" alt="certificate_ok"></p><p>在此过程中倒是发现:<strong>使用带有<code>http*</code>的标题会导致图片不能被链接进博客</strong></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/06/16/git%20page%E7%9A%84%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E5%90%8E%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E7%BB%AD%E7%AD%BE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>记一次解压破解实践</title>
      <link>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/</link>
      <guid>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/</guid>
      <pubDate>Mon, 11 Jun 2018 16:32:44 GMT</pubDate>
      <description>
      
        &lt;p&gt;遇到这样的场景:需要打开加密过的压缩文件,但是又忘了密码…..&lt;/p&gt;
&lt;h3 id=&quot;首先是找个现成工具&quot;&gt;&lt;a href=&quot;#首先是找个现成工具&quot; class=&quot;headerlink&quot; title=&quot;首先是找个现成工具&quot;&gt;&lt;/a&gt;首先是找个现成工具&lt;/h3&gt;&lt;p&gt;试用下来发现:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以从小写,大写字母,数组,特殊字符和自定义字符之间组合暴力破解,一分钟大概可以尝试1万次&lt;/li&gt;
&lt;li&gt;使用一个密码为1234的压缩包测试,发现破解成功后需要注册才能复制破解出来的密码&lt;/li&gt;
&lt;li&gt;不支持外部社工字典&lt;/li&gt;
&lt;li&gt;只支持rar格式&lt;/li&gt;&lt;/ol&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>遇到这样的场景:需要打开加密过的压缩文件,但是又忘了密码…..</p><h3 id="首先是找个现成工具"><a href="#首先是找个现成工具" class="headerlink" title="首先是找个现成工具"></a>首先是找个现成工具</h3><p>试用下来发现:</p><ol><li>可以从小写,大写字母,数组,特殊字符和自定义字符之间组合暴力破解,一分钟大概可以尝试1万次</li><li>使用一个密码为1234的压缩包测试,发现破解成功后需要注册才能复制破解出来的密码</li><li>不支持外部社工字典</li><li>只支持rar格式<a id="more"></a><img src="/blog/2018/06/12/记一次解压破解实践/现成工具的局限.png" alt="现成工具的局限"></li></ol><p>针对2到4,3条缺陷,构思了下面的简易脚本</p><h3 id="测试7z指令"><a href="#测试7z指令" class="headerlink" title="测试7z指令"></a>测试7z指令</h3><p><code>7z x encryption.rar -p12345 -y</code><br><img src="/blog/2018/06/12/记一次解压破解实践/7z_command.png" alt="7z_command"></p><h3 id="使用python调用外部的7z指令"><a href="#使用python调用外部的7z指令" class="headerlink" title="使用python调用外部的7z指令"></a>使用python调用外部的7z指令</h3><p>根据返回值判断是否成功;<br>下面是关键代码</p><pre><code>import osret=1for j in range(100001):            # print(ret)    if ret &gt; 0:        ret=os.system(&apos;7z x &quot;C:\\Users\\king\\Desktop\\test\\encryption.7z&quot; -p%s -y&apos; % (j))            else:        break    print(j)</code></pre><p>用来测试一个密码为12345的压缩包:<br><img src="/blog/2018/06/12/记一次解压破解实践/破解结果及缺点.png" alt="破解结果及缺点"><br>缺点:慢,一分钟大概可以尝试2千次<br>优点:</p><ol><li>可支持外部社工字典</li><li>支持多种压缩格式</li></ol>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>win7下安装Centos7实现双系统</title>
      <link>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/</link>
      <guid>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/</guid>
      <pubDate>Sat, 26 May 2018 14:01:02 GMT</pubDate>
      <description>
      
        &lt;center&gt;&lt;strong&gt;解决出现dracut:/# 的2种方法,编辑grub.cfg使windows分区被识别&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;准备:&lt;br&gt;  ● 笔记本（win7系统）&lt;br&gt;  ● 比安装包容量更大的U盘&lt;br&gt;  ● 预先准备软件：软碟通&lt;br&gt;  ● Centos7系统（iso镜像文件）&lt;/p&gt;
&lt;h3 id=&quot;一：进行磁盘分割&quot;&gt;&lt;a href=&quot;#一：进行磁盘分割&quot; class=&quot;headerlink&quot; title=&quot;一：进行磁盘分割&quot;&gt;&lt;/a&gt;一：进行磁盘分割&lt;/h3&gt;&lt;p&gt;打开磁盘管理, 例如看到D盘有95G空余,右击“压缩卷”，输入压缩空间量，要小于可压缩空间的大小，我输入的是95000MB.&lt;br&gt;注意:为双系统划分free space时不需要“添加简单卷”&lt;/p&gt;
&lt;h3 id=&quot;二：制作U盘系统盘。具体如下：&quot;&gt;&lt;a href=&quot;#二：制作U盘系统盘。具体如下：&quot; class=&quot;headerlink&quot; title=&quot;二：制作U盘系统盘。具体如下：&quot;&gt;&lt;/a&gt;二：制作U盘系统盘。具体如下：&lt;/h3&gt;&lt;p&gt;1.插入U盘，打开软碟通，打开-选择下好的系统iso文件-启动-写入硬盘映像&lt;br&gt;2.然后如下图所示，“硬盘驱动器”选择你U盘所在的驱动器（比如我的是j盘），“写入方式”选择“USB-HDD+”&lt;br&gt;3.接着单击“格式化”，按默认即可（一般默认文件系统位FAT32）&lt;br&gt;4.紧跟着便捷启动，选择syslinux&lt;br&gt;5.最后单击“写入”&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<center><strong>解决出现dracut:/# 的2种方法,编辑grub.cfg使windows分区被识别</strong></center><p>准备:<br>  ● 笔记本（win7系统）<br>  ● 比安装包容量更大的U盘<br>  ● 预先准备软件：软碟通<br>  ● Centos7系统（iso镜像文件）</p><h3 id="一：进行磁盘分割"><a href="#一：进行磁盘分割" class="headerlink" title="一：进行磁盘分割"></a>一：进行磁盘分割</h3><p>打开磁盘管理, 例如看到D盘有95G空余,右击“压缩卷”，输入压缩空间量，要小于可压缩空间的大小，我输入的是95000MB.<br>注意:为双系统划分free space时不需要“添加简单卷”</p><h3 id="二：制作U盘系统盘。具体如下："><a href="#二：制作U盘系统盘。具体如下：" class="headerlink" title="二：制作U盘系统盘。具体如下："></a>二：制作U盘系统盘。具体如下：</h3><p>1.插入U盘，打开软碟通，打开-选择下好的系统iso文件-启动-写入硬盘映像<br>2.然后如下图所示，“硬盘驱动器”选择你U盘所在的驱动器（比如我的是j盘），“写入方式”选择“USB-HDD+”<br>3.接着单击“格式化”，按默认即可（一般默认文件系统位FAT32）<br>4.紧跟着便捷启动，选择syslinux<br>5.最后单击“写入”<br><a id="more"></a><br>               In the end它会显示你写入成功！</p><h3 id="三：进入Bios界面-设置启动首选项为U盘"><a href="#三：进入Bios界面-设置启动首选项为U盘" class="headerlink" title="三：进入Bios界面,设置启动首选项为U盘"></a>三：进入Bios界面,设置启动首选项为U盘</h3><p>1.插入U盘，重启笔记本，启动时按F2，进入Bios界面<br>2.在Boot项里选择USB 为首选项<br>3.保存设置并离开。</p><p><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/bootloader.png" alt="bootloader"><br>一路默认安装会出现dracut:/# 因为centos安装引导工具抓不到U盘</p><p><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/dracut.png" alt="dracut"></p><h3 id="四-用U盘安装centOS7系统出现dracut-的2种解决方法"><a href="#四-用U盘安装centOS7系统出现dracut-的2种解决方法" class="headerlink" title="四.用U盘安装centOS7系统出现dracut:/#的2种解决方法"></a>四.用U盘安装centOS7系统出现dracut:/#的2种解决方法</h3><p>  ● A.安装出现这一步的时候，在dracut:/# 输入 cd /dev  回车 然后输入ls ,查看U盘设备名称，一般sdb后面带数字的就是U盘，这里一般是最后一个, 例如sdb5为我的U盘<br>重启电脑，重新进入到安装界面，按tab键会出现安装引导vmlinuz initrd.img inst.stage2=hd:LABEL=centOS\x207\x20x86_64 rd.live.check quiet把这段改成vmlinuz initrd.img inst.stage2=hd:/dev/sdb4 quiet 回车 然后就开始安装系统了</p><p>  ● B 把设备LABEL改为和安装引导工具的默认设定一致. <strong>先把U盘名字改为CENTOS再设定inst.stage2=hd:LABEL=CENTOS</strong></p><p>==&gt;接着开始安装软件和系统了。。。（这里我选了自动分区会覆盖掉windows的MBR引导程序,,导致后面无法识别windows分区）</p><p>==&gt;安装成功，重启！拔出U盘!!!（注意：不然之前设置的usb为首启动项导致重启时会再次出现安装界面！）</p><h3 id="五-解决CentOS7-安装后无法识别windows分区问题"><a href="#五-解决CentOS7-安装后无法识别windows分区问题" class="headerlink" title="五.解决CentOS7 安装后无法识别windows分区问题"></a>五.解决CentOS7 安装后无法识别windows分区问题</h3><p><strong>需要为Windows添加Grub引导</strong><br>1.手动编辑文件 vi /boot/grub2/grub.cfg</p><p>2 . 找到 ### END /etc/grub.d/10_linux ### 这一行     <strong>（注意是在此行上面添加）</strong><br>3 .在这一行的上面添加如下内容：<br>    menuentry “Windows 7 (loader) (on /dev/sda1)” {                 #引号中间为自定义内容，该内容会出现在启动项选择里面。<br>           insmod ntfs<br>           set root=(hd0,1)         # （hd0,1)第一块盘的第一个分区，即C盘。<br>         chainloader +1<br> }<br>添加过之后，保存。</p><ol start="4"><li>init 6  重启系统,如下图所示,windows系统可选。<br><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/multloader.png" alt="multloader"></li></ol>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
