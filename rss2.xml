<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blog</title>
    <link>https://zerolei.com/blog/</link>
    <atom:link href="/blog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>慢慢被锤骟,偶尔哼哧几句</description>
    <pubDate>Thu, 14 Jun 2018 02:17:45 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>记一次解压破解实践</title>
      <link>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/</link>
      <guid>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/</guid>
      <pubDate>Mon, 11 Jun 2018 16:32:44 GMT</pubDate>
      <description>
      
        &lt;p&gt;遇到这样的场景:需要打开加密过的压缩文件,但是又忘了密码…..&lt;/p&gt;
&lt;h3 id=&quot;首先是找个现成工具&quot;&gt;&lt;a href=&quot;#首先是找个现成工具&quot; class=&quot;headerlink&quot; title=&quot;首先是找个现成工具&quot;&gt;&lt;/a&gt;首先是找个现成工具&lt;/h3&gt;&lt;p&gt;试用下来发现:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以从小写,大写字母,数组,特殊字符和自定义字符之间组合暴力破解,一分钟大概可以尝试1万次&lt;/li&gt;
&lt;li&gt;使用一个密码为1234的压缩包测试,发现破解成功后需要注册才能复制破解出来的密码&lt;/li&gt;
&lt;li&gt;不支持外部社工字典&lt;/li&gt;
&lt;li&gt;只支持rar格式&lt;/li&gt;&lt;/ol&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>遇到这样的场景:需要打开加密过的压缩文件,但是又忘了密码…..</p><h3 id="首先是找个现成工具"><a href="#首先是找个现成工具" class="headerlink" title="首先是找个现成工具"></a>首先是找个现成工具</h3><p>试用下来发现:</p><ol><li>可以从小写,大写字母,数组,特殊字符和自定义字符之间组合暴力破解,一分钟大概可以尝试1万次</li><li>使用一个密码为1234的压缩包测试,发现破解成功后需要注册才能复制破解出来的密码</li><li>不支持外部社工字典</li><li>只支持rar格式<a id="more"></a><img src="/blog/2018/06/12/记一次解压破解实践/现成工具的局限.png" alt="现成工具的局限"></li></ol><p>针对2到4,3条缺陷,构思了下面的简易脚本</p><h3 id="使用python调用外部的7z命令"><a href="#使用python调用外部的7z命令" class="headerlink" title="使用python调用外部的7z命令"></a>使用python调用外部的7z命令</h3><p>根据返回值判断是否成功;<br>下面是关键代码</p><pre><code>import osret=1for j in range(100001):            # print(ret)    if ret &gt; 0:        ret=os.system(&apos;7z x &quot;C:\\Users\\king\\Desktop\\test\\encryption.7z&quot; -p%s -y&apos; % (j))            else:        break    print(j)</code></pre><p>用来测试一个密码为12345的压缩包:<br><img src="/blog/2018/06/12/记一次解压破解实践/破解结果及缺点.png" alt="破解结果及缺点"><br>缺点:慢,一分钟大概可以尝试2千次<br>优点:</p><ol><li>可支持外部社工字典</li><li>支持多种压缩格式</li></ol>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/06/12/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A7%A3%E5%8E%8B%E7%A0%B4%E8%A7%A3%E5%AE%9E%E8%B7%B5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>win7下安装Centos7实现双系统</title>
      <link>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/</link>
      <guid>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/</guid>
      <pubDate>Sat, 26 May 2018 14:01:02 GMT</pubDate>
      <description>
      
        &lt;center&gt;&lt;strong&gt;解决出现dracut:/# 的2种方法,编辑grub.cfg使windows分区被识别&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;准备:&lt;br&gt;  ● 笔记本（win7系统）&lt;br&gt;  ● 比安装包容量更大的U盘&lt;br&gt;  ● 预先准备软件：软碟通&lt;br&gt;  ● Centos7系统（iso镜像文件）&lt;/p&gt;
&lt;h3 id=&quot;一：进行磁盘分割&quot;&gt;&lt;a href=&quot;#一：进行磁盘分割&quot; class=&quot;headerlink&quot; title=&quot;一：进行磁盘分割&quot;&gt;&lt;/a&gt;一：进行磁盘分割&lt;/h3&gt;&lt;p&gt;打开磁盘管理, 例如看到D盘有95G空余,右击“压缩卷”，输入压缩空间量，要小于可压缩空间的大小，我输入的是95000MB.&lt;br&gt;注意:为双系统划分free space时不需要“添加简单卷”&lt;/p&gt;
&lt;h3 id=&quot;二：制作U盘系统盘。具体如下：&quot;&gt;&lt;a href=&quot;#二：制作U盘系统盘。具体如下：&quot; class=&quot;headerlink&quot; title=&quot;二：制作U盘系统盘。具体如下：&quot;&gt;&lt;/a&gt;二：制作U盘系统盘。具体如下：&lt;/h3&gt;&lt;p&gt;1.插入U盘，打开软碟通，打开-选择下好的系统iso文件-启动-写入硬盘映像&lt;br&gt;2.然后如下图所示，“硬盘驱动器”选择你U盘所在的驱动器（比如我的是j盘），“写入方式”选择“USB-HDD+”&lt;br&gt;3.接着单击“格式化”，按默认即可（一般默认文件系统位FAT32）&lt;br&gt;4.紧跟着便捷启动，选择syslinux&lt;br&gt;5.最后单击“写入”&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<center><strong>解决出现dracut:/# 的2种方法,编辑grub.cfg使windows分区被识别</strong></center><p>准备:<br>  ● 笔记本（win7系统）<br>  ● 比安装包容量更大的U盘<br>  ● 预先准备软件：软碟通<br>  ● Centos7系统（iso镜像文件）</p><h3 id="一：进行磁盘分割"><a href="#一：进行磁盘分割" class="headerlink" title="一：进行磁盘分割"></a>一：进行磁盘分割</h3><p>打开磁盘管理, 例如看到D盘有95G空余,右击“压缩卷”，输入压缩空间量，要小于可压缩空间的大小，我输入的是95000MB.<br>注意:为双系统划分free space时不需要“添加简单卷”</p><h3 id="二：制作U盘系统盘。具体如下："><a href="#二：制作U盘系统盘。具体如下：" class="headerlink" title="二：制作U盘系统盘。具体如下："></a>二：制作U盘系统盘。具体如下：</h3><p>1.插入U盘，打开软碟通，打开-选择下好的系统iso文件-启动-写入硬盘映像<br>2.然后如下图所示，“硬盘驱动器”选择你U盘所在的驱动器（比如我的是j盘），“写入方式”选择“USB-HDD+”<br>3.接着单击“格式化”，按默认即可（一般默认文件系统位FAT32）<br>4.紧跟着便捷启动，选择syslinux<br>5.最后单击“写入”<br><a id="more"></a><br>               In the end它会显示你写入成功！</p><h3 id="三：进入Bios界面-设置启动首选项为U盘"><a href="#三：进入Bios界面-设置启动首选项为U盘" class="headerlink" title="三：进入Bios界面,设置启动首选项为U盘"></a>三：进入Bios界面,设置启动首选项为U盘</h3><p>1.插入U盘，重启笔记本，启动时按F2，进入Bios界面<br>2.在Boot项里选择USB 为首选项<br>3.保存设置并离开。</p><p><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/bootloader.png" alt="bootloader"><br>一路默认安装会出现dracut:/# 因为centos安装引导工具抓不到U盘</p><p><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/dracut.png" alt="dracut"></p><h3 id="四-用U盘安装centOS7系统出现dracut-的2种解决方法"><a href="#四-用U盘安装centOS7系统出现dracut-的2种解决方法" class="headerlink" title="四.用U盘安装centOS7系统出现dracut:/#的2种解决方法"></a>四.用U盘安装centOS7系统出现dracut:/#的2种解决方法</h3><p>  ● A.安装出现这一步的时候，在dracut:/# 输入 cd /dev  回车 然后输入ls ,查看U盘设备名称，一般sdb后面带数字的就是U盘，这里一般是最后一个, 例如sdb5为我的U盘<br>重启电脑，重新进入到安装界面，按tab键会出现安装引导vmlinuz initrd.img inst.stage2=hd:LABEL=centOS\x207\x20x86_64 rd.live.check quiet把这段改成vmlinuz initrd.img inst.stage2=hd:/dev/sdb4 quiet 回车 然后就开始安装系统了</p><p>  ● B 把设备LABEL改为和安装引导工具的默认设定一致. <strong>先把U盘名字改为CENTOS再设定inst.stage2=hd:LABEL=CENTOS</strong></p><p>==&gt;接着开始安装软件和系统了。。。（这里我选了自动分区会覆盖掉windows的MBR引导程序,,导致后面无法识别windows分区）</p><p>==&gt;安装成功，重启！拔出U盘!!!（注意：不然之前设置的usb为首启动项导致重启时会再次出现安装界面！）</p><h3 id="五-解决CentOS7-安装后无法识别windows分区问题"><a href="#五-解决CentOS7-安装后无法识别windows分区问题" class="headerlink" title="五.解决CentOS7 安装后无法识别windows分区问题"></a>五.解决CentOS7 安装后无法识别windows分区问题</h3><p><strong>需要为Windows添加Grub引导</strong><br>1.手动编辑文件 vi /boot/grub2/grub.cfg</p><p>2 . 找到 ### END /etc/grub.d/10_linux ### 这一行     <strong>（注意是在此行上面添加）</strong><br>3 .在这一行的上面添加如下内容：<br>    menuentry “Windows 7 (loader) (on /dev/sda1)” {                 #引号中间为自定义内容，该内容会出现在启动项选择里面。<br>           insmod ntfs<br>           set root=(hd0,1)         # （hd0,1)第一块盘的第一个分区，即C盘。<br>         chainloader +1<br> }<br>添加过之后，保存。</p><ol start="4"><li>init 6  重启系统,如下图所示,windows系统可选。<br><img src="/blog/2018/05/26/win7下安装Centos7实现双系统/multloader.png" alt="multloader"></li></ol>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/05/26/win7%E4%B8%8B%E5%AE%89%E8%A3%85Centos7%E5%AE%9E%E7%8E%B0%E5%8F%8C%E7%B3%BB%E7%BB%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>利用Vagrant工具制作一个vagrant-box</title>
      <link>https://zerolei.com/blog/2018/05/19/%E5%88%A9%E7%94%A8Vagrant%E5%B7%A5%E5%85%B7%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AAvagrant-box/</link>
      <guid>https://zerolei.com/blog/2018/05/19/%E5%88%A9%E7%94%A8Vagrant%E5%B7%A5%E5%85%B7%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AAvagrant-box/</guid>
      <pubDate>Fri, 18 May 2018 16:25:43 GMT</pubDate>
      <description>
      
        &lt;center&gt;&lt;strong&gt;利用Vagrant工具制作一个vagrant box&lt;/strong&gt;&lt;/center&gt;

&lt;h3 id=&quot;简介及缘由&quot;&gt;&lt;a href=&quot;#简介及缘由&quot; class=&quot;headerlink&quot; title=&quot;简介及缘由&quot;&gt;&lt;/a&gt;简介及缘由&lt;/h3&gt;&lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vagrant&lt;/a&gt;是个虚拟机管理器,可以安装在Windows, linux, mac等多平台.&lt;br&gt;它主要做这样几件事: 1, 将虚拟机打包成box; 2, 将box分发; 3, 第三者获取box, 解压获得虚拟机. 它解决的主要痛点是, 如何为团队成员搭建相同的开发环境, 以解决软件运行依赖问题.&lt;/p&gt;
&lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;虽然在&lt;a href=&quot;http://www.vagrantbox.es/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.vagrantbox.es/&lt;/a&gt;有许多公共的base boxes可供下载和使用,虽然, 官方教程是让你从网上下载制作好的box, 但网速堪忧, 以及信任问题, &lt;strong&gt;对我而言,主要是想把我安装了一些软件及配置过的centos7，制作成一个vagrant box&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 查看帮助&lt;code&gt;vagrant box &amp;lt;subcommand&amp;gt; -h&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;前置条件&quot;&gt;&lt;a href=&quot;#前置条件&quot; class=&quot;headerlink&quot; title=&quot;前置条件&quot;&gt;&lt;/a&gt;前置条件&lt;/h3&gt;&lt;p&gt;安装VirtualBox&lt;/p&gt;
&lt;p&gt;安装Vagrant&lt;/p&gt;
&lt;p&gt;在VirtualBox中安装操作系统，例如 CentOS7&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<center><strong>利用Vagrant工具制作一个vagrant box</strong></center><h3 id="简介及缘由"><a href="#简介及缘由" class="headerlink" title="简介及缘由"></a>简介及缘由</h3><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">vagrant</a>是个虚拟机管理器,可以安装在Windows, linux, mac等多平台.<br>它主要做这样几件事: 1, 将虚拟机打包成box; 2, 将box分发; 3, 第三者获取box, 解压获得虚拟机. 它解决的主要痛点是, 如何为团队成员搭建相同的开发环境, 以解决软件运行依赖问题.</p><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;虽然在<a href="http://www.vagrantbox.es/" target="_blank" rel="noopener">http://www.vagrantbox.es/</a>有许多公共的base boxes可供下载和使用,虽然, 官方教程是让你从网上下载制作好的box, 但网速堪忧, 以及信任问题, <strong>对我而言,主要是想把我安装了一些软件及配置过的centos7，制作成一个vagrant box</strong></p><p> 查看帮助<code>vagrant box &lt;subcommand&gt; -h</code></p><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>安装VirtualBox</p><p>安装Vagrant</p><p>在VirtualBox中安装操作系统，例如 CentOS7<br><a id="more"></a></p><h3 id="将操作系统打包为可用的Vbox镜像"><a href="#将操作系统打包为可用的Vbox镜像" class="headerlink" title="将操作系统打包为可用的Vbox镜像"></a>将操作系统打包为可用的Vbox镜像</h3><p>创建vagrant用户和用户目录，密码为vagrant,设置vagrant用户加入sudoers, 可在/etc/sudoers文件中写入<br><code>vagrant     ALL=(ALL)       ALL</code></p><p>添加vagrant用户的公共密钥:<br><img src="/blog/2018/05/19/利用Vagrant工具制作一个vagrant-box/添加vagrant公钥.png" alt="添加vagrant公钥"></p><p>在真实操作系统中执行vagrant package –base 虚拟机名称，这样会创建指定虚拟机的box</p><p><code>vagrant package --base centos1_1 --output E:\porgram2\Virtual_Box\myowncentos.box</code></p><p>将制作好的Box添加到Vagrant环境中，vagrant box add  package.box –name 虚拟机标识名</p><p><code>vagrant box add  E:/porgram2/Virtual_Box/myowncentos.box  --name  2centos</code></p><p>初始化运行环境,vagrant init 虚拟机标识名</p><p>运行Vagrant虚拟机，vagrant up 就启动上面这台虚拟机,而且可在virtualbox看到,注意<br>vagrant默认的虚拟机网络设置:<br><img src="/blog/2018/05/19/利用Vagrant工具制作一个vagrant-box/vagrant默认的虚拟机网络设置.png" alt="vagrant默认的虚拟机网络设置"></p><p><strong>部分参考<a href="https://zhuanlan.zhihu.com/p/20791590" target="_blank" rel="noopener">配置虚拟机</a></strong></p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>1.vagrant版本跟不上virtualbox版本,下载最新版vagrant</p><p>2.未添加公钥:新建目录,网络下载vagrant公钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir  -p /home/vagrant/.ssh</span><br><span class="line"></span><br><span class="line">touch /home/vagrant/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub -O /home/vagrant/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>3.虚拟机增强包guest additions package在centos7上安装不上,因为kernel-devel和Linux内核版本不一致<br>可以使用下面两个命令 安装和Linux内核版本匹配的kernel-devel 和 kernel-headers</p><p><code>sudo yum install -y &quot;kernel-devel-$(uname -r)&quot;</code><br><code>yum install -y &quot;kernel-headers-$(uname -r)&quot;</code></p><p>4.虚拟ip未写入ip别名的配置文件(待下一篇:使用vagrant部署开发环境)</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/05/19/%E5%88%A9%E7%94%A8Vagrant%E5%B7%A5%E5%85%B7%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AAvagrant-box/#disqus_thread</comments>
    </item>
    
    <item>
      <title>特殊的日子</title>
      <link>https://zerolei.com/blog/2018/05/13/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%97%A5%E5%AD%90/</link>
      <guid>https://zerolei.com/blog/2018/05/13/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%97%A5%E5%AD%90/</guid>
      <pubDate>Sun, 13 May 2018 09:32:28 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt; :)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2018/05/13/特殊的日子/mother.jpg&quot; alt=&quot;mom&quot;&gt;&lt;br&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;感谢母亲在背后的默默支持!&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p> :)</p><p><img src="/blog/2018/05/13/特殊的日子/mother.jpg" alt="mom"><br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;感谢母亲在背后的默默支持!</p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/05/13/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%97%A5%E5%AD%90/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo框架下Next主题优化</title>
      <link>https://zerolei.com/blog/2018/05/10/Hexo%E6%A1%86%E6%9E%B6%E4%B8%8BNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</link>
      <guid>https://zerolei.com/blog/2018/05/10/Hexo%E6%A1%86%E6%9E%B6%E4%B8%8BNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</guid>
      <pubDate>Thu, 10 May 2018 12:37:04 GMT</pubDate>
      <description>
      
        &lt;p&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;wangwlj已经总结的很好了  &lt;a href=&quot;https://zhuanlan.zhihu.com/p/33616481&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo搭建的GitHub博客之优化大全&lt;/a&gt; , 这里就切换中文,更改页脚,添加支持HTTPS补充三点&lt;/p&gt;
&lt;h3 id=&quot;0x00-更改Next主题默认语言为中文-并不是常见的zh-CN&quot;&gt;&lt;a href=&quot;#0x00-更改Next主题默认语言为中文-并不是常见的zh-CN&quot; class=&quot;headerlink&quot; title=&quot;0x00 更改Next主题默认语言为中文,并不是常见的zh-CN&quot;&gt;&lt;/a&gt;0x00 更改Next主题默认语言为中文,并不是常见的zh-CN&lt;/h3&gt;&lt;p&gt;在文件&lt;code&gt;themes\next\_config.yml&lt;/code&gt;中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;language: zh-Hans&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;0x01-更改页脚&quot;&gt;&lt;a href=&quot;#0x01-更改页脚&quot; class=&quot;headerlink&quot; title=&quot;0x01 更改页脚&quot;&gt;&lt;/a&gt;0x01 更改页脚&lt;/h3&gt;&lt;p&gt;原页脚:&lt;br&gt;&lt;img src=&quot;/blog/2018/05/10/Hexo框架下Next主题优化/old-page-foot.png&quot; alt=&quot;old-page-foot&quot;&gt;&lt;/p&gt;
&lt;p&gt;在文件&lt;code&gt;\themes\next\layout\_partials\footer.swig&lt;/code&gt;中&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; theme.footer.powered %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;powered-by&quot;&lt;/span&gt;&amp;gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#&amp;#125;&amp;#123;&amp;#123; __(&#39;footer.powered&#39;, &#39;&amp;lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://hexo.io&quot;&amp;gt;Hexo&amp;lt;/a&amp;gt;&#39;) &amp;#125;&amp;#125;&amp;#123;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&amp;#125;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后的效果:&lt;img src=&quot;/blog/2018/05/10/Hexo框架下Next主题优化/new-page-foot.png&quot; alt=&quot;new-page-foot&quot;&gt;&lt;br&gt;详见&lt;a href=&quot;https://www.jianshu.com/p/4fbc57269f1b&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo-Next底部logo栏更改&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;wangwlj已经总结的很好了  <a href="https://zhuanlan.zhihu.com/p/33616481" target="_blank" rel="noopener">Hexo搭建的GitHub博客之优化大全</a> , 这里就切换中文,更改页脚,添加支持HTTPS补充三点</p><h3 id="0x00-更改Next主题默认语言为中文-并不是常见的zh-CN"><a href="#0x00-更改Next主题默认语言为中文-并不是常见的zh-CN" class="headerlink" title="0x00 更改Next主题默认语言为中文,并不是常见的zh-CN"></a>0x00 更改Next主题默认语言为中文,并不是常见的zh-CN</h3><p>在文件<code>themes\next\_config.yml</code>中</p><p><code>language: zh-Hans</code></p><h3 id="0x01-更改页脚"><a href="#0x01-更改页脚" class="headerlink" title="0x01 更改页脚"></a>0x01 更改页脚</h3><p>原页脚:<br><img src="/blog/2018/05/10/Hexo框架下Next主题优化/old-page-foot.png" alt="old-page-foot"></p><p>在文件<code>\themes\next\layout\_partials\footer.swig</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class=<span class="string">"powered-by"</span>&gt;&#123;<span class="comment">#</span></span><br><span class="line">  <span class="comment">#&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;#</span></span><br><span class="line"><span class="comment">#&#125;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>修改后的效果:<img src="/blog/2018/05/10/Hexo框架下Next主题优化/new-page-foot.png" alt="new-page-foot"><br>详见<a href="https://www.jianshu.com/p/4fbc57269f1b" target="_blank" rel="noopener">Hexo-Next底部logo栏更改</a></p><a id="more"></a><h3 id="0x02-给自定义域名添加支持-HTTPS"><a href="#0x02-给自定义域名添加支持-HTTPS" class="headerlink" title="0x02 给自定义域名添加支持 HTTPS"></a>0x02 给自定义域名添加支持 HTTPS</h3><p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;简单来说，除了 HTTPS 自身带来的加密、防劫持等特性外，Github 官方基于 HTTPS 配合 CND，使得网站的加载速度更快，还能提供额外的防御 DDoS 攻击的保护。<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;GitHub Pages Blog 原文：<a href="https://blog.github.com/2018-05-01-github-pages-custom-domains-https/" target="_blank" rel="noopener">Custom domains on GitHub Pages gain support for HTTPS</a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;未绑自定义人域名之前只需要到setting页勾选<code>enforce HTTPS</code>之后再绑定域名即可;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是因为之前已经开启了自定义域名， <code>enforce HTTPS</code> 无法勾选且怎么办？如图<br><img src="/blog/2018/05/10/Hexo框架下Next主题优化/before_clean_full_save.png" alt="before_clean_full_save">需要</p><ol><li>把 Custom domain 中的值清空，并点击 Save 进行保存；</li><li>在 Custom domain 中的填入之前清空的值，我这里是 zerolei.com ，填入后点击保存；</li><li>尝试在浏览器里主动访问 <a href="https://zerolei.com">https://zerolei.com</a> ，地址要根据自己的情况，注意协议类型是 https，正确情况下是能正常访问的；</li><li>刷新项目设置页，如果 enforce HTTPS 可勾选，勾选即可；</li><li>如果 enforce HTTPS 不可勾选，并且提示 Not yet available for your site because the certificate has not finished being issued”如图<br><img src="/blog/2018/05/10/Hexo框架下Next主题优化/clean_full_save.png" alt="clean_full_save"> 说明证书尚未申请完成，等待一天即可。</li></ol>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/05/10/Hexo%E6%A1%86%E6%9E%B6%E4%B8%8BNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#disqus_thread</comments>
    </item>
    
    <item>
      <title>centos7下安装python3.6.1</title>
      <link>https://zerolei.com/blog/2018/04/29/centos7%E4%B8%8B%E5%AE%89%E8%A3%85python3-6-1/</link>
      <guid>https://zerolei.com/blog/2018/04/29/centos7%E4%B8%8B%E5%AE%89%E8%A3%85python3-6-1/</guid>
      <pubDate>Sun, 29 Apr 2018 14:58:15 GMT</pubDate>
      <description>
      
        &lt;p&gt;不要动现有的python2环境！因为有很多系统命令，比如yum都要用到。&lt;/p&gt;
&lt;h3 id=&quot;1-安装依赖环境&quot;&gt;&lt;a href=&quot;#1-安装依赖环境&quot; class=&quot;headerlink&quot; title=&quot;1. 安装依赖环境&quot;&gt;&lt;/a&gt;1. 安装依赖环境&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y groupinstall &amp;quot;Development tools&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;部分依赖包说明:&lt;br&gt;gcc:linux ( centos ) gcc 编译环境 ,安装后可以编译 Python 源码 –&amp;gt; make &amp;amp;; make install&lt;br&gt;zlib-devel:压缩依赖包&lt;br&gt;openssl-devel:让 Python pip 可以链接 https&lt;br&gt;bzip2-devel:让 linux( centos) 可以使用bzip2 压缩&lt;br&gt;sqlite-devel:sqlite 数据库依赖包 , 让 Python 可以使用 sqlite 数据库 –&amp;gt; import sqlite3&lt;/p&gt;
&lt;h3 id=&quot;2-下载Python3&quot;&gt;&lt;a href=&quot;#2-下载Python3&quot; class=&quot;headerlink&quot; title=&quot;2.下载Python3&quot;&gt;&lt;/a&gt;2.下载Python3&lt;/h3&gt;&lt;p&gt;wget &lt;a href=&quot;https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz&lt;/a&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>不要动现有的python2环境！因为有很多系统命令，比如yum都要用到。</p><h3 id="1-安装依赖环境"><a href="#1-安装依赖环境" class="headerlink" title="1. 安装依赖环境"></a>1. 安装依赖环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall &quot;Development tools&quot;</span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span><br></pre></td></tr></table></figure><p>部分依赖包说明:<br>gcc:linux ( centos ) gcc 编译环境 ,安装后可以编译 Python 源码 –&gt; make &amp;; make install<br>zlib-devel:压缩依赖包<br>openssl-devel:让 Python pip 可以链接 https<br>bzip2-devel:让 linux( centos) 可以使用bzip2 压缩<br>sqlite-devel:sqlite 数据库依赖包 , 让 Python 可以使用 sqlite 数据库 –&gt; import sqlite3</p><h3 id="2-下载Python3"><a href="#2-下载Python3" class="headerlink" title="2.下载Python3"></a>2.下载Python3</h3><p>wget <a href="https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz</a></p><a id="more"></a><h3 id="3-安装python3"><a href="#3-安装python3" class="headerlink" title="3.安装python3"></a>3.安装python3</h3><p>安装在/usr/local/python3（具体安装位置看个人喜好）<br>创建目录：<br><code>mkdir -p /usr/local/python3</code><br><code>tar -zxvf Python-3.6.1.tgz</code></p><h3 id="4-进入解压后的目录，编译安装。"><a href="#4-进入解压后的目录，编译安装。" class="headerlink" title="4.进入解压后的目录，编译安装。"></a>4.进入解压后的目录，编译安装。</h3><p>cd Python-3.6.1<br> ./configure –prefix=/usr/local/python3<br>{<br>./configure命令执行完毕之后创建一个文件creating Makefile，供下面的make命令使用 执行make install之后就会把程序安装到我们指定的目录中去。<br>在待安装的源码路径下使用命令./configure –help输出详细的选项列表。<br>其中–prefix选项是配置安装的路径，如果不配置该选项，安装后可执行文件默认放在/usr /local/bin，库文件默认放<br>在/usr/local/lib，配置文件默认放在/usr/local/etc，其它的资源文件放在/usr /local/share，比较凌乱。<br>如果配置–prefix，如：<br>./configure –prefix=/usr/local/test<br>可以把所有资源文件放在/usr/local/test的路径中，不会杂乱。<br>用了—prefix选项的另一个好处是卸载软件或移植软件。当某个安装的软件不再需要时，只须简单的删除该安装目录，<br>就可以把软件卸载得干干净净；移植软件只需拷贝整个目录到另外一个机器即可（相同的操作系统）。<br>当然要卸载程序，也可以在原来的make目录下用一次make uninstall，但前提是make文件指定过uninstall。<br>}</p><p>make &amp;&amp; make install</p><h3 id="5-修改-Python-环境变量-或软连接修改环境变量"><a href="#5-修改-Python-环境变量-或软连接修改环境变量" class="headerlink" title="5.修改 Python 环境变量 或软连接修改环境变量"></a>5.修改 Python 环境变量 或软连接修改环境变量</h3><p>软连接修改环境变量实例:建立python3的软链,使其在终端输入 Python ,直接跳转到 Python3<br>  ● A、重命名 /usr/bin/python为 python2.6.6,防止和之前软链接冲突<br>  ● B、创建软链接到 编译好的 Python3.5 目录<br> <img src="/blog/2018/04/29/centos7下安装python3-6-1/linkpython.png" alt="linkpython"><br>mv /usr/bin/python /usr/bin/python2.6.6<br>执行ln -s /usr/local/python3/bin/python3 /usr/bin/python命令创建软连接。执行python -V查看Python是否安装成功。<br>ln -s /usr/local/python3/bin/python3 /usr/bin/python3<br>ln -s /usr/local/python3/bin/pip3 /usr/bin/pip        #pip是Python官方推荐的包管理工具。 </p><h3 id="6-修改yum配置文件"><a href="#6-修改yum配置文件" class="headerlink" title="6.修改yum配置文件"></a>6.修改yum配置文件</h3><p>因为yum使用python2，因此替换为python3后可能无法正常工作，继续使用这个python2.7.5<br>因此修改yum配置文件(vi /usr/bin/yum)。<br>把文件头部的#!/usr/bin/python改成#!/usr/bin/python2.7保存退出即可。</p><p><code>vi /usr/libexec/urlgrabber-ext-down</code><br>把文件头部的#!/usr/bin/python改成#!/usr/bin/python2.7保存退出即可。</p><h3 id="7、设置别名方便使用"><a href="#7、设置别名方便使用" class="headerlink" title="7、设置别名方便使用"></a>7、设置别名方便使用</h3><p><code>alias py=python3</code></p><h3 id="8、升级安装最新版PIP"><a href="#8、升级安装最新版PIP" class="headerlink" title="8、升级安装最新版PIP"></a>8、升级安装最新版PIP</h3><p><code>pip install --upgrade pip</code></p><p><img src="/blog/2018/04/29/centos7下安装python3-6-1/pip.png" alt="pip"></p><h3 id="最后可选择更换国内pypi镜像"><a href="#最后可选择更换国内pypi镜像" class="headerlink" title="最后可选择更换国内pypi镜像"></a>最后可选择更换国内pypi镜像</h3><p>国内pypi镜像<br>  ● 豆瓣：<a href="http://pypi.douban.com/simple" target="_blank" rel="noopener">http://pypi.douban.com/simple</a><br>  ● 中国科学技术大学：<a href="http://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/simple/</a></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/04/29/centos7%E4%B8%8B%E5%AE%89%E8%A3%85python3-6-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Perl常用编译指令</title>
      <link>https://zerolei.com/blog/2018/03/09/Perl%E5%B8%B8%E7%94%A8%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4/</link>
      <guid>https://zerolei.com/blog/2018/03/09/Perl%E5%B8%B8%E7%94%A8%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4/</guid>
      <pubDate>Thu, 08 Mar 2018 16:12:51 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!usr/bin/perl -w#&quot;-w&quot;equal &quot;use warnings; &quot;</span><br><span class="line">use warnings;</span><br><span class="line">use strict;</span><br><span class="line">use 5.012;                         #指定最低perl版本,会隐式的打开 strict 编译指令</span><br><span class="line">use diagnostics;</span><br><span class="line">use autodie;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2018/03/09/Perl%E5%B8%B8%E7%94%A8%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>just_test_next主题</title>
      <link>https://zerolei.com/blog/2017/10/03/just_test_next%E4%B8%BB%E9%A2%98/</link>
      <guid>https://zerolei.com/blog/2017/10/03/just_test_next%E4%B8%BB%E9%A2%98/</guid>
      <pubDate>Tue, 03 Oct 2017 15:18:09 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;center&gt;测试居中&lt;/center&gt;&lt;br&gt;测试添加图片:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/2017/10/03/just_test_next主题/myhead.jpg&quot; alt=&quot;头像&quot;&gt;&lt;/p&gt;
&lt;p&gt;测试添加文摘:&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;content&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;[author[&lt;/strong&gt;&lt;cite&gt;source]] [link] [source_link_title]&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;测试自定义摘要:&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><center>测试居中</center><br>测试添加图片:</p><p><img src="/blog/2017/10/03/just_test_next主题/myhead.jpg" alt="头像"></p><p>测试添加文摘:<br><blockquote><p>content</p><footer><strong>[author[</strong><cite>source]] [link] [source_link_title]</cite></footer></blockquote></p><p>测试自定义摘要:<br><a id="more"></a></p><p>测试添加引用:</p><figure class="highlight plain"><figcaption><span>[title] [] [url] [link text]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code snippet</span><br></pre></td></tr></table></figure><p>测试添加普通的代码块1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(&apos;Hello World!&apos;);</span><br></pre></td></tr></table></figure><p>测试添加普通的代码块2:</p><pre><code>import osret=1for j in range(100001):            # print(ret)    if ret &gt; 0:        ret=os.system(&apos;7z x &quot;C:\\Users\\king\\Desktop\\test\\encryption.7z&quot; -p%s -y&apos; % (j))            else:        break    print(j)</code></pre><p>测试添加普通的代码块3:<code>dir</code>    </p><p>添加分割线:</p><hr><p>缩进:<br>&#160;&#160;&#160;&#160;&#160;&#160;&#160;缩进2个字符</p><p>添加链接:<a href="http://localhost:4000/" target="_blank" rel="noopener">本地</a> </p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2017/10/03/just_test_next%E4%B8%BB%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Make-Blog</title>
      <link>https://zerolei.com/blog/2017/08/19/Make-Blog/</link>
      <guid>https://zerolei.com/blog/2017/08/19/Make-Blog/</guid>
      <pubDate>Fri, 18 Aug 2017 16:42:46 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;1-先安装-nodejs-和-git-下载hexo&quot;&gt;&lt;a href=&quot;#1-先安装-nodejs-和-git-下载hexo&quot; class=&quot;headerlink&quot; title=&quot;1. 先安装 nodejs 和 git 下载hexo&quot;&gt;&lt;/a&gt;1. 先安装 &lt;a 
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="1-先安装-nodejs-和-git-下载hexo"><a href="#1-先安装-nodejs-和-git-下载hexo" class="headerlink" title="1. 先安装 nodejs 和 git 下载hexo"></a>1. 先安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a> 和 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a> 下载hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir hexo  #创建一个文件夹</span><br><span class="line">$ cd hexo</span><br><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="2-使用hexo-n在本地-source-posts文件夹下新建了文章-撰写Markdown文档"><a href="#2-使用hexo-n在本地-source-posts文件夹下新建了文章-撰写Markdown文档" class="headerlink" title="2.使用hexo n在本地\source\_posts文件夹下新建了文章,撰写Markdown文档"></a>2.使用<code>hexo n</code>在本地<code>\source\_posts</code>文件夹下新建了文章,撰写Markdown文档</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"文章名称"</span></span><br></pre></td></tr></table></figure><h3 id="3-用如下指令生成静态页面然后开启预览访问端口，在浏览器中打开-本地-查看页面"><a href="#3-用如下指令生成静态页面然后开启预览访问端口，在浏览器中打开-本地-查看页面" class="headerlink" title="3. 用如下指令生成静态页面然后开启预览访问端口，在浏览器中打开 本地 查看页面"></a>3. 用如下指令生成静态页面然后开启预览访问端口，在浏览器中打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">本地</a> 查看页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3 id="4-创建github账号，新建库，名为-你的用户名-github-io-下载部署工具hexo-deployer-git-git-clone-用户名-github-io库的地址链接-配置-config-yml文件-然后hexo-d部署上去"><a href="#4-创建github账号，新建库，名为-你的用户名-github-io-下载部署工具hexo-deployer-git-git-clone-用户名-github-io库的地址链接-配置-config-yml文件-然后hexo-d部署上去" class="headerlink" title="4. 创建github账号，新建库，名为: 你的用户名.github.io;下载部署工具hexo-deployer-git,git clone  用户名.github.io库的地址链接,配置_config.yml文件,然后hexo d部署上去"></a>4. 创建github账号，新建库，名为: 你的用户名.github.io;下载部署工具hexo-deployer-git,<code>git clone</code>  用户名.github.io库的地址链接,配置_config.yml文件,然后<code>hexo d</code>部署上去</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="5-可以绑定个人域名，可到-DNSPOD-设置DNS解析-dnspod免费版支持二级域名解析"><a href="#5-可以绑定个人域名，可到-DNSPOD-设置DNS解析-dnspod免费版支持二级域名解析" class="headerlink" title="5. 可以绑定个人域名，可到 DNSPOD 设置DNS解析,(dnspod免费版支持二级域名解析)"></a>5. 可以绑定个人域名，可到 <a href="https://www.dnspod.cn/" target="_blank" rel="noopener">DNSPOD</a> 设置DNS解析,(dnspod免费版支持二级域名解析)</h3><p>只需要一条 @ cname  记录链接到 你的用户名.guthub.io 即可<br>可参照<a href="https://support.dnspod.cn/Kb/showarticle/tsid/28/" target="_blank" rel="noopener">详情</a></p><h3 id="6-需要在用户名-github-io库的settingz中开启page功能-并配置个性域名-会生成一个CNAME文件-内容就是你的域名"><a href="#6-需要在用户名-github-io库的settingz中开启page功能-并配置个性域名-会生成一个CNAME文件-内容就是你的域名" class="headerlink" title="6. 需要在用户名.github.io库的settingz中开启page功能;并配置个性域名(会生成一个CNAME文件),内容就是你的域名"></a>6. 需要在用户名.github.io库的settingz中开启page功能;并配置个性域名(会生成一个CNAME文件),内容就是你的域名</h3><p>CNAME文件内容,如:<code>zerolei.com</code></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2017/08/19/Make-Blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>简介Hexo</title>
      <link>https://zerolei.com/blog/2017/08/18/%E7%AE%80%E4%BB%8BHexo/</link>
      <guid>https://zerolei.com/blog/2017/08/18/%E7%AE%80%E4%BB%8BHexo/</guid>
      <pubDate>Thu, 17 Aug 2017 16:32:21 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;这个是由台湾人Tommy Chen用node.js开发的程序&lt;br&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>这个是由台湾人Tommy Chen用node.js开发的程序<br>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://zerolei.com/blog/2017/08/18/%E7%AE%80%E4%BB%8BHexo/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
